#!/usr/bin/env ruby
# Sync Homebrew's installed Rubies with rbenv and NodeJSs with nodenv

require "pathname"
require "fileutils"

def gem_like_version(version_path)
  Gem::Version.new(version_path.basename
                               .to_s
                               .tr("_", "."))
end

def gem_version_segments(version_path)
  basename_without_revision = version_path.basename
                                          .to_s
                                          .gsub(/_\d+$/, "")
  Gem::Version.new(basename_without_revision)
              .canonical_segments
end

def link_version(version_path, version_name, versions_path)
  link_path = versions_path / version_name

  begin
    FileUtils.rm_f link_path
    FileUtils.ln_sf version_path, link_path
  rescue
    @retries ||= {}
    raise if @retries[link_path]

    @retries[link_path] ||= true
    retry
  end
end

def link_rbenv_versions(version_path)
  @rbenv_versions.mkpath

  major_version, minor_version, patch_version = gem_version_segments(version_path)
  patch_version ||= 0
  (0..patch_version).each do |patch|
    link_version(version_path, "#{major_version}.#{minor_version}.#{patch}", @rbenv_versions)
  end
end

def link_nodenv_versions(version_path)
  @nodenv_versions.mkpath

  major_version, minor_version, patch_version = gem_version_segments(version_path)
  minor_version ||= 0
  (0..minor_version).each do |minor|
    patch_version ||= 0
    (0..patch_version).each do |patch|
      link_version(version_path, "#{major_version}.#{minor}.#{patch}", @nodenv_versions)
    end
  end
end

@rbenv_versions  = Pathname("#{ENV["HOME"]}/.rbenv/versions")
@nodenv_versions = Pathname("#{ENV["HOME"]}/.nodenv/versions")

homebrew_ruby_versions  = Pathname.glob("/usr/local/Cellar/ruby")
homebrew_ruby_versions += Pathname.glob("/usr/local/Cellar/ruby@*")
homebrew_ruby_versions.flat_map(&:children)
                      .sort_by(&method(:gem_like_version))
                      .each(&method(:link_rbenv_versions))

homebrew_node_versions  = Pathname.glob("/usr/local/Cellar/node")
homebrew_node_versions += Pathname.glob("/usr/local/Cellar/node@*")
homebrew_node_versions.flat_map(&:children)
                      .sort_by(&method(:gem_like_version))
                      .each(&method(:link_nodenv_versions))

(@nodenv_versions.children + @rbenv_versions.children)
  .select(&:symlink?)
  .reject(&:exist?)
  .each { |path| FileUtils.rm_f path }
